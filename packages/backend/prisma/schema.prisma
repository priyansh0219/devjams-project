// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SiteRole {
  SITE_ADMIN
  SITE_MEMBER
}

enum ClubRole {
  CLUB_ADMIN
  CLUB_TREASURER
  CLUB_MEMBER
}

model User {
  email              String   @id @unique
  name               String?
  onboardingComplete Boolean  @default(false)
  siteRole           SiteRole @default(SITE_MEMBER)
  createdAt          DateTime @default(now())

  clubMemberships ClubMembership[]
  wallet          Wallet?
}

model Club {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  memberships ClubMembership[]
}

model ClubMembership {
  id        String   @id @default(cuid())
  userEmail String
  clubId    String
  clubRole  ClubRole @default(CLUB_MEMBER)
  createdAt DateTime @default(now())

  user User @relation(fields: [userEmail], references: [email])
  club Club @relation(fields: [clubId], references: [id])

  @@unique([userEmail, clubId])
}

model Wallet {
  id            String   @id @default(cuid())
  encryptedSeed String
  iv            String
  salt          String
  publicAddress String
  userEmail     String   @unique
  createdAt     DateTime @default(now())

  user User @relation(fields: [userEmail], references: [email])
}
